Coding Style Convention
-----------------------

PHP:

/*
	copyright, license, blah-blah
*/
/* $Id$ */

	class SomeClassName
	{
		const CORRECT_ANSWER = 42; // must differ from zero

		private $privateVariable	= null;
		private $yetAnotherVariable	= null;

		public function someOddMethodName(FooInterface $someObject)
		{
			if (!$someObject) {
				TrashClass::staticMethod();
				throw new FooException("help me!");
			} else {
				$someObject->shortMethod(
					$firstLongParameter,
					$secondLongParameter->anotherMethod(
						$foo,
						$bah
					)
				);

				// do something useful
			}

			if (
				$condition
				|| $incindent
				|| $whatEverElse
			) {
				// bah!
			}

			$longString =
				'foo'
				.'bar'
				.'blah';

			// try to avoid casts
			$castedValue = (int) $rawVariable;

			return $this;
		}

		final public static anotherOddMethod()
		{
			try {
				self::someOddMethodName(new FooImplementation());
			} catch (FooException $e) {
				// do something
				throw $e; // try to not "eat" exceptions
			}
		}
	}

--

switch ($foo) {
	case $boo:

		$this->fooBar();

		$that->fooBlah();

		break;

	case $zoo:

		$that->phew($this);

		break;

	default:

		die();

		break;
}

Class Method Sorting:
	* public static function create() (if any)
	* public function __construct (if any)
	* public fucntion __destruct (if any)
	* public fucntion __sleep (if any)
	* public fucntion __wakeup (if any)
	* abstract public
	* abstract protected
	* final public
	* final public static
	* public
	* public static
	* protected
	* protected static
	* private

